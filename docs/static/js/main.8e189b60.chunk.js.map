{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","className","required","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAK,GAAC,OAAKH,GAAL,mBAAoBG,OACnCF,EAAc,MAKlB,SACI,uBACIM,UAAU,eACVC,UAAQ,EACRC,KAAK,OACLC,MAAOV,EACPW,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCShBG,EAjBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAENC,EAFM,0FAEmFC,UAAUH,GAF7F,sBAGOI,MAAMF,GAHb,cAGNG,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAcLM,GAdK,4CAAH,sDCgCEO,EA5BM,SAACf,GAAc,IAAD,EAELf,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAJkB,mBAExBC,EAFwB,KAEjBC,EAFiB,KAyB/B,OAhBAC,qBAAU,WAENpB,EAAQC,GACHoB,MAAK,SAAAC,GAEFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAKtB,CAAChB,IAIGiB,GCbIK,EAdK,SAAC,GAAqB,IAAlBV,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAI3B,OACI,sBAAKT,UAAU,iDAAf,UACI,qBAAK8B,IAAKrB,EAAKsB,IAAKZ,EAAOnB,UAAU,iBACrC,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,yBAAd,SAAwCmB,UCkCzCa,EApCC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,EAIGe,EAAaf,GAAjCa,EAJiB,EAItBN,KAAaS,EAJS,EAITA,QASrB,OACI,qCACI,6BAAKhB,IAEJgB,GAAW,mBAAGvB,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,MAAf,SAEQoB,EAAOJ,KAAI,SAAAC,GAAG,OACV,qBACIjB,UAAU,WADd,SAGI,cAAC,EAAD,eAAiBiB,KADZA,EAAIC,aCGtBe,EA9BM,WAAM,MAIazC,mBAAS,CAAC,mBAJvB,mBAIhB0C,EAJgB,KAIJ3C,EAJI,KAWvB,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ2C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,kBClB1D4B,IAASC,OACL,qBAAKpC,UAAU,gBAAf,SACE,cAAC,EAAD,MAEJqC,SAASC,eAAe,W","file":"static/js/main.8e189b60.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( inputValue.trim().length > 2) {\r\n            setCategories(e => [inputValue, ...e])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"form-control\"\r\n                required\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=No357fmZvApobArW7mFtZYw3EBU3dP7m&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}\r\n\r\nexport default getGifs","import { useState, useEffect } from \"react\"\r\nimport getGifs from '../helpers/getGifs'\r\n\r\n\r\nconst useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state //{data:[], loading: true}\r\n}\r\n\r\nexport default useFetchGifs","import React from 'react'\r\n\r\nconst GifGridItem = ( { title, url} ) => {\r\n\r\n    // console.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"card p-3 animate__animated animate__backInLeft\" >\r\n            <img src={url} alt={title} className=\"card-img-top\"/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title text-center\">{title}</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\n// Helpers folder\r\n// import getGifs from '../helpers/getGifs'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    const { data:images, loading } = useFetchGifs(category)\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then(setImages)\r\n    // }, [category])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n            <div className=\"row\">\r\n                {\r\n                    images.map(img => (\r\n                        <div\r\n                            className=\"col-md-4\"\r\n                            key={img.id}>\r\n                            <GifGridItem {...img} />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\n\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const category = ['One Punch', 'Dragon Ball', 'Samurai X']\r\n\r\n    const [categories, setCategories] = useState(['Rick and Morty'])\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( [...categories, 'Dark'] )\r\n    //     setCategories(e => [...e, 'Dark'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid category={category} key={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/animate.css/animate.min.css'\n\nReactDOM.render(\n    <div className=\"container p-5\">\n      <GifExpertApp />\n    </div>,\n  document.getElementById('root')\n);"],"sourceRoot":""}